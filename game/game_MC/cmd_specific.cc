// Copyright (c) Facebook, Inc. and its affiliates.
// All rights reserved.
//
// This source code is licensed under the license found in the
// LICENSE file in the root directory of this source tree.
//
#include "engine/cmd.h"
#include "engine/cmd_receiver.h"
#include "engine/game_env.h"

// Derived class. Note that the definition is automatically generated by a
// python file.
#include "cmd_specific.gen.h"
#include "engine/cmd.gen.h"
#include "engine/cmd_specific.gen.h"
#include "lua/cpp_interface.h"

bool CmdGenerateMap::run(GameEnv* env, CmdReceiver*) {
  assert(env->IsGameActive());
  RTSMapGenerator::GenerateRandom(
      env->GetMap(), env->GetNumOfPlayers(), _seed, _no_terrain);
  // create fog for each player
  for (int player_id = 0; player_id < env->GetNumOfPlayers(); ++player_id) {
    env->GetPlayer(player_id).CreateFog();
  }

  return true;
}

bool CmdGameStartSpecific::run(GameEnv*, CmdReceiver*) {
  return true;
}

bool CmdGenerateUnit::run(GameEnv* env, CmdReceiver* receiver) {
  assert(env->IsGameActive());
  RTSUnitGenerator::GenerateRandom(&env->GetMap(),
                                   receiver,
                                   env->GetNumOfPlayers(),
                                   _seed,
                                   _resource,
                                   _resource_dist,
                                   _num_resources,
                                   _fair,
                                   _num_peasants,
                                   _num_extra_units);
  return true;
}
